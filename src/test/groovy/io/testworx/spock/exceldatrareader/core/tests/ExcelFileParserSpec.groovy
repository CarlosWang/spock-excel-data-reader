/*
The MIT License (MIT)

Copyright (c) 2015 Nicholas Oppersdorff

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
THE SOFTWARE.
 */

package io.testworx.spock.exceldatrareader.core.tests

import io.testworx.spock.exceldatareader.core.ExcelFileParser
import spock.lang.Specification
/*
 * This Groovy source file was auto generated by running 'gradle buildInit --type groovy-library'
 * by 'nvonop' at '12/11/15 18:53' with Gradle 2.7
 *
 * @author nvonop, @date 12/11/15 18:53
 */

class ExcelFileParserSpec extends Specification {

    static final String DATA_FILE_LOCATION = "/src/test/resources/"
    static final String XLSX_DATA_FILE_NAME = "TestData.xlsx"
    static final String XLS_DATA_FILE_NAME = "TestData.xlsx"
    static final String DATA_SHEET_1_NAME = "Datasheet1"
    static final String DATA_SHEET_2_NAME ="Datasheet2"
    String filepath

    def "Calling openExcel method and specifying no worksheet returns the default worksheet"() {
        when:
        ExcelFileParser fileParser = new ExcelFileParser()
        filepath = System.getProperty('test.data.dir', System.getProperty("user.dir")+ DATA_FILE_LOCATION)

        then:
        fileParser.openExcel(filepath, XLSX_DATA_FILE_NAME, "") != null
        fileParser.openExcel(filepath, XLSX_DATA_FILE_NAME, "").class.name == "org.apache.poi.xssf.usermodel.XSSFSheet"
        fileParser.openExcel(filepath, XLSX_DATA_FILE_NAME, "").getSheetName() == DATA_SHEET_1_NAME
    }

    def "Calling openExcel method and specifying a worksheet returns the specified worksheet"() {
        when:
        ExcelFileParser fileParser = new ExcelFileParser()
        filepath = System.getProperty('test.data.dir', System.getProperty("user.dir")+ DATA_FILE_LOCATION)

        then:
        fileParser.openExcel(filepath, XLSX_DATA_FILE_NAME, DATA_SHEET_2_NAME) != null
        fileParser.openExcel(filepath, XLSX_DATA_FILE_NAME, DATA_SHEET_2_NAME).class.name == "org.apache.poi.xssf.usermodel.XSSFSheet"
        fileParser.openExcel(filepath, XLSX_DATA_FILE_NAME, DATA_SHEET_2_NAME).getSheetName() == DATA_SHEET_2_NAME
    }
}
